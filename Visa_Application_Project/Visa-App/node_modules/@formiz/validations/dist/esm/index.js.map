{"version":3,"file":"index.js","sources":["../../src/index.js"],"sourcesContent":["const isString = x => typeof x === 'string' || x instanceof String;\n// const isNumber = x => typeof x === 'number';\nconst isArray = x => Array.isArray(x);\n// const isObject = x => x && typeof x === 'object' && x.constructor === Object;\nconst emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n\nexport const isRequired = () => value => !!value || value === 0;\n\nexport const isNotEmptyString = () => (value) => {\n  if (!isString(value)) return false;\n\n  return !!(value || '').match(/^(?!\\s*$).+/);\n};\n\nexport const isNotEmptyArray = () => (value) => {\n  if (!isArray(value)) return false;\n\n  return !!(value || []).length;\n};\n\nexport const isEmail = () => (value) => {\n  if (value === null || value === undefined) {\n    return true;\n  }\n\n  if (!isString(value)) return false;\n\n  return !value || emailRegex.test(value);\n};\n"],"names":["isString","x","String","emailRegex","isRequired","value","isNotEmptyString","match","isNotEmptyArray","Array","isArray","length","isEmail","test"],"mappings":"AAAA,IAAMA,EAAW,SAAAC,SAAkB,iBAANA,GAAkBA,aAAaC,QAItDC,EAAa,6GAENC,EAAa,kBAAM,SAAAC,WAAWA,GAAmB,IAAVA,IAEvCC,EAAmB,kBAAM,SAACD,WAChCL,EAASK,OAEJA,GAAS,IAAIE,MAAM,iBAGlBC,EAAkB,kBAAM,SAACH,UAZtBJ,EAaDI,IAbMI,MAAMC,QAAQT,OAevBI,GAAS,IAAIM,OAfT,IAAAV,IAkBHW,EAAU,kBAAM,SAACP,UACxBA,MAAAA,KAICL,EAASK,MAENA,GAASF,EAAWU,KAAKR"}
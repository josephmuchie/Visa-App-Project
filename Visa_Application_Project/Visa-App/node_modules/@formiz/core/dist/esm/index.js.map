{"version":3,"file":"index.js","sources":["../../src/FormContext/initialState.js","../../src/FormContext/helpers/index.js","../../src/FormContext/index.js","../../src/FormContext/actions/index.js","../../src/useFormState/index.js","../../src/Form/index.js","../../src/FormStep/errors.js","../../src/FormStep/index.js","../../src/FormStepContext/index.js","../../src/useForm/index.js","../../../../node_modules/fast-memoize/src/index.js","../../src/useField/errors.js","../../src/useField/index.js","../../src/index.js"],"sourcesContent":["export const getInitialState = id => ({\n  id,\n  resetKey: 1,\n  isValid: true,\n  isSubmitted: false,\n  initialStepName: null,\n  navigatedStepName: null,\n  steps: [\n    /*\n    {\n      name: 'myStep',\n      order: 0,\n      index: 0,\n      isValid: true,\n      isVisited: false,\n      isSubmitted: false,\n      isEnabled: true,\n    }\n    */\n  ],\n  fields: [\n    /*\n    {\n      name: 'myField',\n      value: 'Field Value',\n      defaultValue: 'Field Value',\n      isEnabled: true,\n      isPristine: true,\n      step: 'stepName',\n      validations: [],\n      errors: [],\n      externalError: null,\n    }\n    */\n  ],\n});\n","const isObject = x => x && typeof x === 'object' && x.constructor === Object;\n\nconst parseValues = values => Object.keys(values)\n  .reduce(\n    (acc, key) => parseValuesName(key, acc), // eslint-disable-line no-use-before-define\n    values,\n  );\n\n// TODO: refactoring\nconst parseValuesName = (name, values) => {\n  if (name.indexOf('.') < 0 && name.indexOf('[') < 0) {\n    return values;\n  }\n\n  const value = values[name];\n  const { [name]: deletedKey, ...nextValues } = values || {};\n  const [current, ...otherNames] = name.split('.');\n  const isArraySyntax = current.match(/\\[([0-9]*)\\]$/g);\n\n  if (isArraySyntax) {\n    const [currentName,, currentIndex] = current.split(/(\\[|\\])/g);\n    const currentCollection = values[currentName] || [];\n\n    if (otherNames.length) {\n      const group = {\n        ...(values[currentName] && isObject(values[currentName][currentIndex])\n          ? values[currentName][currentIndex]\n          : {}\n        ),\n        [otherNames.join('.')]: value,\n      };\n\n      currentCollection[currentIndex] = parseValues(group);\n    } else {\n      currentCollection[currentIndex] = value;\n    }\n\n    return {\n      ...nextValues,\n      [currentName]: currentCollection,\n    };\n  }\n\n  const group = {\n    ...(isObject(values[current]) ? values[current] : {}),\n    [otherNames.join('.')]: value,\n  };\n\n  return {\n    ...nextValues,\n    [current]: parseValues(group),\n  };\n};\n\nexport const getFormValues = (fields) => {\n  const values = (fields || [])\n    .filter(field => field.isEnabled)\n    .reduce((obj, field) => ({\n      ...obj,\n      [field.name]: field.value,\n    }), {});\n\n  return parseValues(values);\n};\n\nexport const getField = (fieldName, fields) => (fields || [])\n  .find(x => x.name === fieldName);\n\nexport const getEnabledFieldsByStep = (stepName, fields) => (fields || [])\n  .filter(x => x.isEnabled)\n  .filter(x => x.step === stepName);\n\nexport const getFieldErrors = (fieldName, fields) => {\n  const field = getField(fieldName, fields);\n\n  if (!field) {\n    return [];\n  }\n\n  const errorMessages = (field.validations || [])\n    .map(x => (x.rule && !x.rule(field.value) ? x.message : '___FIELD_IS_VALID___'))\n    .filter(x => x !== '___FIELD_IS_VALID___');\n\n  if (field.externalError) {\n    return [field.externalError, ...errorMessages];\n  }\n\n  return errorMessages;\n};\n\nexport const getEnabledSteps = steps => (steps || [])\n  .filter(x => x.isEnabled);\n\nexport const getStepsOrdered = steps => (steps || [])\n  .sort((a, b) => a.index - b.index)\n  .sort((a, b) => a.order - b.order)\n  .map((x, index) => ({ ...x, index }));\n\nexport const getCurrentStepNameFromState = state => (\n  state.navigatedStepName\n  || state.initialStepName\n);\n\nexport const getStepPosition = (stepName, steps) => (steps || [])\n  .filter(x => x.isEnabled)\n  .findIndex(x => x.name === stepName) || 0;\n\nexport const getStep = (stepName, steps) => {\n  const enabledSteps = getEnabledSteps(steps);\n  return getStepsOrdered(enabledSteps)\n    .find(x => x.name === stepName) || {};\n};\n\nexport const getFieldStepName = (fieldName, fields) => {\n  const field = fields.find(x => x.name === fieldName);\n\n  if (!field || !field.isEnabled) {\n    return undefined;\n  }\n\n  return field.step;\n};\n\nexport const getUniqueId = key => `formiz-${key}-id-${Math.random().toString(36).substr(2, 9)}`;\n","import React, {\n  useContext, useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { getInitialState } from './initialState';\nimport { getUniqueId } from './helpers';\n\nexport const FormContext = React.createContext();\n\nexport const useFormContext = () => useContext(FormContext);\n\nexport const FormContextProvider = ({\n  children,\n  onStateChange,\n  onSubmit,\n  onValidSubmit,\n  onInvalidSubmit,\n}) => {\n  const formId = useMemo(() => getUniqueId('form'), []);\n  const [state, setState] = useState(getInitialState(formId));\n\n  const dispatch = useCallback((action) => {\n    setState(s => action(s));\n  }, []);\n\n  useEffect(() => {\n    onStateChange(state);\n  }, [state]);\n\n  return (\n    <FormContext.Provider\n      value={{\n        state,\n        dispatch,\n        onSubmit,\n        onValidSubmit,\n        onInvalidSubmit,\n      }}\n    >\n      {children}\n    </FormContext.Provider>\n  );\n};\n\nFormContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  onStateChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  onValidSubmit: PropTypes.func,\n  onInvalidSubmit: PropTypes.func,\n};\n\nFormContextProvider.defaultProps = {\n  onStateChange: () => {},\n  onSubmit: () => {},\n  onValidSubmit: () => {},\n  onInvalidSubmit: () => {},\n};\n","import {\n  getEnabledFieldsByStep,\n  getFieldErrors,\n  getCurrentStepNameFromState,\n  getStepsOrdered,\n  getStepPosition,\n  getFormValues,\n  getEnabledSteps,\n} from '../helpers';\n\n/*\n  Form Actions\n*/\n\nexport const formValidate = () => (state) => {\n  const fields = (state.fields || [])\n    .map(x => ({\n      ...x,\n      errors: getFieldErrors(x.name, state.fields),\n    }));\n\n  const isValid = fields.filter(x => x.isEnabled).every(x => !x.errors.length);\n  const steps = (state.steps || []).map(s => ({\n    ...s,\n    isValid: getEnabledFieldsByStep(s.name, fields).every(x => !x.errors.length),\n  }));\n\n  return {\n    ...state,\n    fields,\n    steps,\n    isValid,\n  };\n};\n\nexport const formInvalidateFields = fieldsErrors => (state) => {\n  const fields = state.fields.map((field) => {\n    const errorMessage = fieldsErrors[field.name];\n\n    if (!errorMessage) {\n      return field;\n    }\n\n    return {\n      ...field,\n      externalError: errorMessage,\n    };\n  });\n\n  let newState = {\n    ...state,\n    fields,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const formSubmit = (\n  callback = () => {},\n  callbackOnValid = () => {},\n  callbackOnInvalid = () => {},\n) => (state) => {\n  const steps = (state.steps || []).map(step => ({\n    ...step,\n    isSubmitted: true,\n  }));\n\n  const formValues = getFormValues(state.fields);\n\n  callback(formValues);\n\n  let newState = {\n    ...state,\n    steps,\n    isSubmitted: true,\n  };\n\n  newState = formValidate()(newState);\n\n  if (newState.isValid) {\n    callbackOnValid(formValues);\n  } else {\n    callbackOnInvalid(formValues);\n  }\n\n  return newState;\n};\n\nexport const formReset = () => (state) => {\n  const fields = (state.fields || []).map(({ externalError, ...field }) => ({\n    ...field,\n    isPristine: true,\n    value: field.defaultValue,\n  }));\n\n  const steps = (state.steps || []).map(step => ({\n    ...step,\n    isSubmitted: false,\n    isVisited: false,\n  }));\n\n  let newState = {\n    ...state,\n    fields,\n    steps,\n    isSubmitted: false,\n    navigatedStepName: state.initialStepName,\n    resetKey: state.resetKey + 1,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\n/*\n  Step Actions\n*/\n\nexport const stepRegister = (name, { order = 0, label = '', isEnabled = true } = {}) => (state) => {\n  const step = state.steps.find(x => x.name === name) || {};\n  const otherSteps = state.steps.filter(x => x.name !== name);\n  const steps = getStepsOrdered([\n    ...otherSteps,\n    {\n      ...step,\n      name,\n      label,\n      order,\n      isValid: true,\n      isVisited: false,\n      isSubmitted: false,\n      isEnabled,\n    },\n  ]);\n\n  let newState = {\n    ...state,\n    steps,\n    initialStepName: steps.length ? steps[0].name : null,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const stepUnregister = name => (state) => {\n  const otherSteps = state.steps.filter(x => x.name !== name);\n  const steps = getStepsOrdered(otherSteps);\n\n  let newState = {\n    ...state,\n    steps,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const stepUpdate = (name, { label, isEnabled } = {}) => (state) => {\n  const step = state.steps.find(x => x.name === name) || {};\n  const otherSteps = state.steps.filter(x => x.name !== name);\n  const steps = getStepsOrdered([\n    ...otherSteps,\n    {\n      ...step,\n      label,\n      isEnabled,\n    },\n  ]);\n\n  return {\n    ...state,\n    steps,\n  };\n};\n\nexport const stepSetVisited = name => (state) => {\n  const step = state.steps.find(x => x.name === name) || {};\n  const otherSteps = state.steps.filter(x => x.name !== name);\n  const steps = getStepsOrdered([\n    ...otherSteps,\n    {\n      ...step,\n      isVisited: true,\n    },\n  ]);\n\n  return {\n    ...state,\n    steps,\n  };\n};\n\nexport const stepGoTo = name => (state) => {\n  const { steps } = state;\n\n  const newStep = getEnabledSteps(steps).find(x => x.name === name);\n\n  if (!newStep || !newStep.name) {\n    return state;\n  }\n\n  let newState = {\n    ...state,\n    navigatedStepName: newStep.name,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const stepGoToPosition = position => (state) => {\n  const { steps } = state;\n\n  const newStep = getEnabledSteps(steps)[position] || {};\n\n  return stepGoTo(newStep.name)(state);\n};\n\nexport const stepGoNext = () => (state) => {\n  const { steps } = state;\n\n  const stepsCount = getEnabledSteps(steps).length;\n  const currenStepName = getCurrentStepNameFromState(state);\n  const currentStepPosition = getStepPosition(currenStepName, steps);\n  let nextStepPosition = stepsCount > 0 ? currentStepPosition + 1 : 0;\n  nextStepPosition = nextStepPosition > stepsCount - 1 ? currentStepPosition : nextStepPosition;\n\n  return stepGoToPosition(nextStepPosition)(state);\n};\n\nexport const stepGoPrev = () => (state) => {\n  const { steps } = state;\n\n  const currenStepName = getCurrentStepNameFromState(state);\n  const currentStepPosition = getStepPosition(currenStepName, steps);\n\n  let prevStepPosition = currentStepPosition - 1;\n  prevStepPosition = prevStepPosition < 0 ? 0 : prevStepPosition;\n\n  return stepGoToPosition(prevStepPosition)(state);\n};\n\nexport const stepSubmit = (\n  name,\n  callback = () => {},\n  callbackOnValid = () => {},\n  callbackOnInvalid = () => {},\n) => (state) => {\n  const step = state.steps.find(x => x.name === name) || {};\n  const otherSteps = state.steps.filter(x => x.name !== name);\n  const steps = getStepsOrdered([\n    ...otherSteps,\n    {\n      ...step,\n      isSubmitted: true,\n    },\n  ]);\n\n  let newState = {\n    ...state,\n    steps,\n  };\n\n  if (!step.isValid) {\n    return newState;\n  }\n\n  const { navigatedStepName: prevStepName } = newState;\n\n  newState = stepGoNext()(newState);\n\n  if (prevStepName === newState.navigatedStepName) {\n    newState = formSubmit(callback, callbackOnValid, callbackOnInvalid)(newState);\n  }\n\n  return newState;\n};\n\n/*\n  Field Actions\n*/\n\nexport const fieldRegister = (\n  id,\n  name,\n  {\n    value = null,\n    step = null,\n    validations = [],\n  } = {},\n) => (state) => {\n  const field = state.fields.find(x => x.name === name) || {};\n  const otherFields = state.fields.filter(x => x.name !== name);\n  const fields = [\n    ...otherFields,\n    {\n      ...field,\n      id,\n      name,\n      value: field.value || value,\n      defaultValue: value,\n      isEnabled: true,\n      isPristine: true,\n      step,\n      validations,\n      errors: [],\n    },\n  ];\n\n  let newState = {\n    ...state,\n    fields,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const fieldUnregister = (id, isKeepValue) => (state) => {\n  const field = state.fields.find(x => x.id === id);\n\n  if (!field) {\n    return state;\n  }\n\n  const otherFields = state.fields.filter(x => x.id !== id);\n\n  const fields = !isKeepValue ? otherFields : [\n    ...otherFields,\n    {\n      ...field,\n      isEnabled: false,\n    },\n  ];\n\n  let newState = {\n    ...state,\n    fields,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const fieldUpdateValidations = (\n  id,\n  validations,\n) => (state) => {\n  const field = state.fields.find(x => x.id === id);\n\n  if (!field) {\n    return state;\n  }\n\n  const otherFields = state.fields.filter(x => x.id !== id);\n  const fields = [\n    ...otherFields,\n    {\n      ...field,\n      validations,\n    },\n  ];\n\n  let newState = {\n    ...state,\n    fields,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const fieldSetValue = (id, value) => (state) => {\n  const field = state.fields.find(x => x.id === id);\n\n  if (!field) {\n    return state;\n  }\n\n  const otherFields = state.fields.filter(x => x.id !== id);\n  const { externalError, ...fieldWithoutExternalError } = field;\n\n  const fields = [\n    ...otherFields,\n    {\n      ...fieldWithoutExternalError,\n      value,\n      isPristine: false,\n    },\n  ];\n\n  let newState = {\n    ...state,\n    fields,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n","import {\n  formInvalidateFields, stepGoNext, stepGoPrev, stepGoTo, formReset, formSubmit, stepSubmit,\n} from '../FormContext/actions';\nimport {\n  getFormValues,\n  getCurrentStepNameFromState,\n  getStep,\n  getStepPosition,\n  getFieldStepName,\n  getEnabledSteps,\n} from '../FormContext/helpers';\nimport { useFormContext } from '../FormContext';\n\nexport const initialFormState = {\n  id: null,\n  submit: () => {},\n  isValid: true,\n  isSubmitted: false,\n  values: {},\n  invalidateFields: () => {},\n  reset: () => {},\n  resetKey: 0,\n  currentStep: {},\n  steps: [],\n  isStepValid: true,\n  isStepSubmitted: false,\n  isFirstStep: true,\n  isLastStep: true,\n  submitStep: () => {},\n  getFieldStepName: () => {},\n  nextStep: () => {},\n  prevStep: () => {},\n  goToStep: () => {},\n};\n\nexport const useFormState = () => {\n  const formContext = useFormContext();\n\n  if (!formContext) {\n    return null;\n  }\n\n  const {\n    state, dispatch, onSubmit, onValidSubmit, onInvalidSubmit,\n  } = formContext;\n\n  const {\n    id,\n    fields,\n    isValid: isFormValid,\n    isSubmitted: isFormSubmitted,\n    steps,\n    resetKey,\n  } = state;\n\n  const values = getFormValues(fields);\n\n  const getStepProperties = ({\n    name,\n    label,\n    isValid,\n    isVisited,\n    isSubmitted,\n    index,\n  }) => ({\n    name,\n    label,\n    isValid,\n    isVisited,\n    isSubmitted,\n    index,\n  });\n\n  const enabledSteps = getEnabledSteps(steps);\n  const stepsCount = enabledSteps.length;\n\n  const currentStepName = getCurrentStepNameFromState(state);\n  const currentStep = getStep(currentStepName, enabledSteps);\n  const currentStepPosition = getStepPosition(currentStepName, enabledSteps);\n\n  const handleSubmit = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    dispatch(formSubmit(onSubmit, onValidSubmit, onInvalidSubmit));\n  };\n\n  const handleStepSubmit = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    dispatch(stepSubmit(currentStepName, onSubmit, onValidSubmit, onInvalidSubmit));\n  };\n\n  return {\n    id,\n    submit: handleSubmit,\n    isValid: isFormValid,\n    isSubmitted: isFormSubmitted,\n    values,\n    invalidateFields: (fieldsErrors) => { dispatch(formInvalidateFields(fieldsErrors)); },\n    reset: () => { dispatch(formReset()); },\n    resetKey,\n    currentStep: getStepProperties(currentStep),\n    steps: enabledSteps.map(getStepProperties),\n    isStepValid: currentStep.isValid,\n    isStepSubmitted: currentStep.isSubmitted,\n    isFirstStep: currentStepPosition === 0,\n    isLastStep: currentStepPosition === stepsCount - 1,\n    submitStep: handleStepSubmit,\n    getFieldStepName: fieldName => getFieldStepName(fieldName, fields),\n    nextStep: () => { dispatch(stepGoNext()); },\n    prevStep: () => { dispatch(stepGoPrev()); },\n    goToStep: (name) => { dispatch(stepGoTo(name)); },\n  };\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormContext } from '../FormContext';\nimport { useFormState } from '../useFormState';\n\nexport const propTypes = {\n  children: PropTypes.node,\n  autoForm: PropTypes.bool,\n  onValid: PropTypes.func,\n  onInvalid: PropTypes.func,\n  onChange: PropTypes.func,\n  connect: PropTypes.shape({\n    __connect__: PropTypes.func,\n  }),\n};\n\nexport const defaultProps = {\n  children: '',\n  autoForm: false,\n  onValid: () => {},\n  onInvalid: () => {},\n  onChange: () => {},\n  connect: {\n    __connect__: () => {},\n  },\n};\n\nexport const Form = ({\n  children,\n  autoForm,\n  onValid,\n  onInvalid,\n  onChange,\n  connect,\n}) => {\n  const { dispatch } = useFormContext();\n\n  const exposedState = useFormState();\n\n  onChange(exposedState.values);\n\n  if (exposedState.isValid) {\n    onValid();\n  } else {\n    onInvalid();\n  }\n\n  useEffect(() => {\n    connect.__connect__(exposedState);\n  }, [\n    dispatch,\n    JSON.stringify(connect.__connect__),\n    JSON.stringify(exposedState),\n  ]);\n\n  if (!autoForm) {\n    return children;\n  }\n\n  return (\n    <form noValidate onSubmit={exposedState.submit}>\n      { children }\n    </form>\n  );\n};\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n","export const ErrorStepWithoutName = new Error('A <FormizStep> always needs a `name` attribute.');\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormContext } from '../FormContext';\nimport {\n  stepRegister, stepUnregister, stepSetVisited, stepUpdate, stepGoPrev,\n} from '../FormContext/actions';\nimport { ErrorStepWithoutName } from './errors';\nimport { useFormState } from '../useFormState';\n\nexport const propTypes = {\n  as: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n    PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n    ])),\n  ]),\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  isEnabled: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.node,\n  order: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nexport const defaultProps = {\n  as: 'div',\n  children: '',\n  isEnabled: true,\n  label: '',\n  order: 0,\n  style: {},\n};\n\nexport const FormStep = ({\n  as: Tag,\n  children,\n  isEnabled,\n  name,\n  label,\n  order,\n  style,\n  ...props\n}) => {\n  if (!name) {\n    throw ErrorStepWithoutName;\n  }\n\n  const { dispatch } = useFormContext();\n  const { currentStep } = useFormState();\n\n  const isActive = currentStep.name === name;\n\n  useEffect(() => {\n    if (currentStep.name && !currentStep.isVisited && isActive) {\n      dispatch(stepSetVisited(currentStep.name));\n    }\n  });\n\n  useEffect(() => {\n    if (isActive && !isEnabled) {\n      dispatch(stepGoPrev());\n    }\n  }, [isEnabled, isActive]);\n\n  useEffect(() => {\n    dispatch(stepRegister(name, { order }));\n\n    return () => {\n      dispatch(stepUnregister(name));\n    };\n  }, [name, order]);\n\n  useEffect(() => {\n    dispatch(stepUpdate(name, { label, isEnabled: !!isEnabled }));\n  }, [isEnabled, label]);\n\n  if (typeof children === 'function') {\n    return children({\n      isActive,\n    });\n  }\n\n  return (\n    <Tag\n      style={{\n        ...style,\n        display: !isActive ? 'none' : null,\n      }}\n      {...props}\n    >\n      {isEnabled && children}\n    </Tag>\n  );\n};\n\n\nFormStep.propTypes = propTypes;\nFormStep.defaultProps = defaultProps;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FormStepContext = React.createContext();\n\nexport const useFormStepName = () => useContext(FormStepContext);\n\nexport const FormStepContextProvider = ({ children, name }) => (\n  <FormStepContext.Provider value={name}>\n    {children}\n  </FormStepContext.Provider>\n);\n\nFormStepContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  name: PropTypes.string,\n};\n\nFormStepContextProvider.defaultProps = {\n  name: null,\n};\n","import { useState } from 'react';\nimport { initialFormState, useFormState } from '../useFormState';\n\nexport const useForm = () => {\n  const [state, setState] = useState(initialFormState);\n  const formState = useFormState();\n\n  // Use form context to retrieve the state\n  if (formState) {\n    return formState;\n  }\n\n  // Use the connect property to retrieve the state\n  const connect = (val) => {\n    setState(val);\n  };\n\n  return { ...state, __connect__: connect };\n};\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","export const ErrorFieldWithoutForm = new Error('A Formiz field always needs to be in a `<Formiz>` component.');\nexport const ErrorFieldWithoutName = new Error('A Formiz field always needs a `name` attribute.');\n","import {\n  useEffect, useState, useRef, useMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport memoized from 'fast-memoize';\nimport { useFormContext } from '../FormContext';\nimport { getStep, getUniqueId } from '../FormContext/helpers';\nimport {\n  fieldRegister, fieldUnregister, fieldUpdateValidations, fieldSetValue,\n} from '../FormContext/actions';\nimport { useFormStepName } from '../FormStepContext';\nimport { ErrorFieldWithoutForm, ErrorFieldWithoutName } from './errors';\n\nconst DEFAULT_FIELD_DEBOUNCE = 100;\n\nexport const fieldPropTypes = {\n  debounce: PropTypes.number,\n  defaultValue: PropTypes.any,\n  formatValue: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  keepValue: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  validations: PropTypes.arrayOf(PropTypes.shape({\n    rule: PropTypes.func,\n    message: PropTypes.node,\n  })),\n};\n\nexport const fieldDefaultProps = {\n  debounce: DEFAULT_FIELD_DEBOUNCE,\n  defaultValue: null,\n  formatValue: val => val,\n  required: false,\n  keepValue: false,\n  onChange: () => {},\n  validations: [],\n};\n\nconst getIsRequiredValidation = (required) => {\n  if (!required && required !== '') {\n    return {};\n  }\n  return {\n    rule: x => !!x || x === 0,\n    message: required !== true ? required : '',\n  };\n};\n\nconst getValidations = (required, validations) => {\n  const extraRules = [\n    getIsRequiredValidation(required),\n  ];\n\n  return [\n    ...extraRules,\n    ...validations,\n  ]\n    .filter(x => x.rule)\n    .map(x => ({ ...x, rule: memoized(x.rule) }));\n};\n\nexport const useField = ({\n  debounce = DEFAULT_FIELD_DEBOUNCE,\n  defaultValue,\n  formatValue = val => val,\n  required,\n  keepValue,\n  name,\n  onChange,\n  validations = [],\n}) => {\n  const fieldId = useMemo(() => getUniqueId('field'), []);\n\n  if (!name) {\n    throw ErrorFieldWithoutName;\n  }\n\n  const formContext = useFormContext();\n  const stepName = useFormStepName();\n\n  if (!formContext) {\n    throw ErrorFieldWithoutForm;\n  }\n\n  const { state, dispatch } = formContext;\n  const field = state.fields.find(f => f.name === name) || {};\n  const errorMessages = (field.errors || []).filter(x => !!x);\n  const currentStep = getStep(stepName, state.steps);\n  const isSubmitted = currentStep.name ? currentStep.isSubmitted : state.isSubmitted;\n  const [localValue, setLocalValue] = useState(field.value || defaultValue);\n\n  const debounceRef = useRef(debounce);\n  debounceRef.current = debounce;\n\n  const defaultValueRef = useRef();\n  defaultValueRef.current = defaultValue;\n\n  const localValueRef = useRef();\n  localValueRef.current = localValue;\n\n  const keepValueRef = useRef();\n  keepValueRef.current = keepValue;\n\n  const formatValueRef = useRef();\n  formatValueRef.current = formatValue;\n\n  const isFirstRenderRef = useRef(true);\n\n  // Mount & Unmount field\n  useEffect(() => {\n    dispatch(fieldRegister(\n      fieldId,\n      name,\n      {\n        value: localValueRef.current || defaultValueRef.current,\n        step: stepName,\n        validations: getValidations(required, validations),\n      },\n    ));\n\n    return () => {\n      dispatch(fieldUnregister(fieldId, keepValueRef.current));\n    };\n  }, [\n    fieldId,\n    name,\n    stepName,\n  ]);\n\n  // Reset value if resetKey change\n  useEffect(() => {\n    if (!keepValueRef.current) {\n      setLocalValue(defaultValueRef.current);\n    }\n  }, [state.resetKey]);\n\n  // Update state value from local value\n  useEffect(() => {\n    if (isFirstRenderRef.current) {\n      return () => {};\n    }\n\n    const formattedValue = formatValueRef.current(localValue);\n\n    if (!debounceRef.current) {\n      dispatch(fieldSetValue(fieldId, formattedValue));\n      return () => {};\n    }\n\n    const timer = setTimeout(() => {\n      dispatch(fieldSetValue(fieldId, formattedValue));\n    }, debounceRef.current);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [JSON.stringify(localValue), fieldId]);\n\n  // Update Validations\n  useEffect(() => {\n    if (!isFirstRenderRef.current) {\n      dispatch(fieldUpdateValidations(fieldId, getValidations(required, validations)));\n    }\n  }, [\n    fieldId,\n    required,\n    ...validations.reduce(\n      // use deps array and message as dependencies for updating validations\n      (acc, cur) => [...acc, ...(cur.deps || []), cur.message],\n      [],\n    ),\n  ]);\n\n  useEffect(() => {\n    isFirstRenderRef.current = false;\n  }, []);\n\n  return {\n    id: fieldId,\n    resetKey: state.resetKey,\n    value: localValue || '',\n    valueDebounced: field.value || defaultValue || '',\n    errorMessages,\n    errorMessage: errorMessages[0],\n    isValid: field.errors ? !field.errors.length : true,\n    isPristine: !!field.isPristine,\n    isSubmitted,\n    setValue: (value) => {\n      setLocalValue(value);\n      if (onChange) {\n        onChange(formatValueRef.current(value));\n      }\n    },\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  propTypes as propTypesForm,\n  defaultProps as defaultPropsForm,\n} from './Form';\nimport { FormContextProvider } from './FormContext';\n\nimport {\n  FormStep,\n  propTypes as propTypesFormStep,\n  defaultProps as defaultPropsFormStep,\n} from './FormStep';\nimport { FormStepContextProvider } from './FormStepContext';\n\nexport { useForm } from './useForm';\nexport { useField, fieldPropTypes, fieldDefaultProps } from './useField';\n\nexport const Formiz = props => (\n  <FormContextProvider {...props}>\n    <Form {...props} />\n  </FormContextProvider>\n);\n\nFormiz.propTypes = {\n  ...propTypesForm,\n  onSubmit: PropTypes.func,\n  onValidSubmit: PropTypes.func,\n  onInvalidSubmit: PropTypes.func,\n};\n\nFormiz.defaultProps = {\n  ...defaultPropsForm,\n  onSubmit: () => {},\n  onValidSubmit: () => {},\n  onInvalidSubmit: () => {},\n};\n\nexport const FormizStep = ({ name, order, ...props }) => (\n  <FormStepContextProvider name={name}>\n    <FormStep {...props} name={name} order={order} />\n  </FormStepContextProvider>\n);\n\nFormizStep.propTypes = propTypesFormStep;\nFormizStep.defaultProps = defaultPropsFormStep;\n"],"names":["isObject","x","_typeof","constructor","Object","parseValues","values","keys","reduce","acc","key","parseValuesName","name","indexOf","value","nextValues","split","current","otherNames","match","currentName","currentIndex","currentCollection","length","group","join","getFormValues","fields","filter","field","isEnabled","obj","getEnabledFieldsByStep","stepName","step","getFieldErrors","fieldName","find","getField","errorMessages","validations","map","rule","message","externalError","getEnabledSteps","steps","getStepsOrdered","sort","a","b","index","order","getCurrentStepNameFromState","state","navigatedStepName","initialStepName","getStepPosition","findIndex","getStep","enabledSteps","getUniqueId","Math","random","toString","substr","FormContext","React","createContext","useFormContext","useContext","FormContextProvider","children","onStateChange","onSubmit","onValidSubmit","onInvalidSubmit","formId","useMemo","useState","id","resetKey","isValid","isSubmitted","setState","dispatch","useCallback","action","s","useEffect","Provider","propTypes","PropTypes","node","isRequired","func","defaultProps","formValidate","errors","every","formSubmit","callback","callbackOnValid","callbackOnInvalid","formValues","newState","stepGoTo","newStep","stepGoToPosition","position","stepGoNext","stepsCount","currenStepName","currentStepPosition","nextStepPosition","stepGoPrev","prevStepPosition","fieldSetValue","otherFields","fieldWithoutExternalError","isPristine","initialFormState","submit","invalidateFields","reset","currentStep","isStepValid","isStepSubmitted","isFirstStep","isLastStep","submitStep","getFieldStepName","nextStep","prevStep","goToStep","useFormState","formContext","isFormValid","isFormSubmitted","getStepProperties","label","isVisited","currentStepName","e","preventDefault","fieldsErrors","errorMessage","formInvalidateFields","defaultValue","otherSteps","stepSubmit","autoForm","bool","onValid","onInvalid","onChange","connect","shape","__connect__","Form","exposedState","JSON","stringify","noValidate","ErrorStepWithoutName","Error","as","oneOfType","string","$$typeof","symbol","render","arrayOf","number","style","object","array","FormStep","Tag","props","isActive","stepSetVisited","stepRegister","stepUnregister","stepUpdate","display","FormStepContext","FormStepContextProvider","useForm","formState","val","monadic","fn","cache","serializer","arg","cacheKey","computedValue","get","call","this","set","variadic","args","Array","prototype","slice","arguments","apply","assemble","context","strategy","serialize","bind","strategyDefault","options","create","serializerDefault","ObjectWithoutPrototypeCache","has","cacheDefault","ErrorFieldWithoutForm","ErrorFieldWithoutName","fieldPropTypes","debounce","any","formatValue","required","keepValue","fieldDefaultProps","getIsRequiredValidation","getValidations","extraRules","memoized","useField","fieldId","f","localValue","setLocalValue","debounceRef","useRef","defaultValueRef","localValueRef","keepValueRef","formatValueRef","isFirstRenderRef","fieldRegister","isKeepValue","formattedValue","timer","setTimeout","clearTimeout","fieldUpdateValidations","cur","deps","valueDebounced","setValue","Formiz","propTypesForm","defaultPropsForm","FormizStep","propTypesFormStep","defaultPropsFormStep"],"mappings":"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"}
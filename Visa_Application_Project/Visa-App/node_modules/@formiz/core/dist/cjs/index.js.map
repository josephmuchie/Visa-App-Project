{"version":3,"file":"index.js","sources":["../../src/FormContext/initialState.js","../../src/FormContext/helpers/index.js","../../src/FormContext/index.js","../../src/FormContext/actions/index.js","../../src/useFormState/index.js","../../src/Form/index.js","../../src/FormStep/errors.js","../../src/FormStep/index.js","../../src/FormStepContext/index.js","../../src/useForm/index.js","../../../../node_modules/fast-memoize/src/index.js","../../src/useField/errors.js","../../src/useField/index.js","../../src/index.js"],"sourcesContent":["export const getInitialState = id => ({\n  id,\n  resetKey: 1,\n  isValid: true,\n  isSubmitted: false,\n  initialStepName: null,\n  navigatedStepName: null,\n  steps: [\n    /*\n    {\n      name: 'myStep',\n      order: 0,\n      index: 0,\n      isValid: true,\n      isVisited: false,\n      isSubmitted: false,\n      isEnabled: true,\n    }\n    */\n  ],\n  fields: [\n    /*\n    {\n      name: 'myField',\n      value: 'Field Value',\n      defaultValue: 'Field Value',\n      isEnabled: true,\n      isPristine: true,\n      step: 'stepName',\n      validations: [],\n      errors: [],\n      externalError: null,\n    }\n    */\n  ],\n});\n","const isObject = x => x && typeof x === 'object' && x.constructor === Object;\n\nconst parseValues = values => Object.keys(values)\n  .reduce(\n    (acc, key) => parseValuesName(key, acc), // eslint-disable-line no-use-before-define\n    values,\n  );\n\n// TODO: refactoring\nconst parseValuesName = (name, values) => {\n  if (name.indexOf('.') < 0 && name.indexOf('[') < 0) {\n    return values;\n  }\n\n  const value = values[name];\n  const { [name]: deletedKey, ...nextValues } = values || {};\n  const [current, ...otherNames] = name.split('.');\n  const isArraySyntax = current.match(/\\[([0-9]*)\\]$/g);\n\n  if (isArraySyntax) {\n    const [currentName,, currentIndex] = current.split(/(\\[|\\])/g);\n    const currentCollection = values[currentName] || [];\n\n    if (otherNames.length) {\n      const group = {\n        ...(values[currentName] && isObject(values[currentName][currentIndex])\n          ? values[currentName][currentIndex]\n          : {}\n        ),\n        [otherNames.join('.')]: value,\n      };\n\n      currentCollection[currentIndex] = parseValues(group);\n    } else {\n      currentCollection[currentIndex] = value;\n    }\n\n    return {\n      ...nextValues,\n      [currentName]: currentCollection,\n    };\n  }\n\n  const group = {\n    ...(isObject(values[current]) ? values[current] : {}),\n    [otherNames.join('.')]: value,\n  };\n\n  return {\n    ...nextValues,\n    [current]: parseValues(group),\n  };\n};\n\nexport const getFormValues = (fields) => {\n  const values = (fields || [])\n    .filter(field => field.isEnabled)\n    .reduce((obj, field) => ({\n      ...obj,\n      [field.name]: field.value,\n    }), {});\n\n  return parseValues(values);\n};\n\nexport const getField = (fieldName, fields) => (fields || [])\n  .find(x => x.name === fieldName);\n\nexport const getEnabledFieldsByStep = (stepName, fields) => (fields || [])\n  .filter(x => x.isEnabled)\n  .filter(x => x.step === stepName);\n\nexport const getFieldErrors = (fieldName, fields) => {\n  const field = getField(fieldName, fields);\n\n  if (!field) {\n    return [];\n  }\n\n  const errorMessages = (field.validations || [])\n    .map(x => (x.rule && !x.rule(field.value) ? x.message : '___FIELD_IS_VALID___'))\n    .filter(x => x !== '___FIELD_IS_VALID___');\n\n  if (field.externalError) {\n    return [field.externalError, ...errorMessages];\n  }\n\n  return errorMessages;\n};\n\nexport const getEnabledSteps = steps => (steps || [])\n  .filter(x => x.isEnabled);\n\nexport const getStepsOrdered = steps => (steps || [])\n  .sort((a, b) => a.index - b.index)\n  .sort((a, b) => a.order - b.order)\n  .map((x, index) => ({ ...x, index }));\n\nexport const getCurrentStepNameFromState = state => (\n  state.navigatedStepName\n  || state.initialStepName\n);\n\nexport const getStepPosition = (stepName, steps) => (steps || [])\n  .filter(x => x.isEnabled)\n  .findIndex(x => x.name === stepName) || 0;\n\nexport const getStep = (stepName, steps) => {\n  const enabledSteps = getEnabledSteps(steps);\n  return getStepsOrdered(enabledSteps)\n    .find(x => x.name === stepName) || {};\n};\n\nexport const getFieldStepName = (fieldName, fields) => {\n  const field = fields.find(x => x.name === fieldName);\n\n  if (!field || !field.isEnabled) {\n    return undefined;\n  }\n\n  return field.step;\n};\n\nexport const getUniqueId = key => `formiz-${key}-id-${Math.random().toString(36).substr(2, 9)}`;\n","import React, {\n  useContext, useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { getInitialState } from './initialState';\nimport { getUniqueId } from './helpers';\n\nexport const FormContext = React.createContext();\n\nexport const useFormContext = () => useContext(FormContext);\n\nexport const FormContextProvider = ({\n  children,\n  onStateChange,\n  onSubmit,\n  onValidSubmit,\n  onInvalidSubmit,\n}) => {\n  const formId = useMemo(() => getUniqueId('form'), []);\n  const [state, setState] = useState(getInitialState(formId));\n\n  const dispatch = useCallback((action) => {\n    setState(s => action(s));\n  }, []);\n\n  useEffect(() => {\n    onStateChange(state);\n  }, [state]);\n\n  return (\n    <FormContext.Provider\n      value={{\n        state,\n        dispatch,\n        onSubmit,\n        onValidSubmit,\n        onInvalidSubmit,\n      }}\n    >\n      {children}\n    </FormContext.Provider>\n  );\n};\n\nFormContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  onStateChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  onValidSubmit: PropTypes.func,\n  onInvalidSubmit: PropTypes.func,\n};\n\nFormContextProvider.defaultProps = {\n  onStateChange: () => {},\n  onSubmit: () => {},\n  onValidSubmit: () => {},\n  onInvalidSubmit: () => {},\n};\n","import {\n  getEnabledFieldsByStep,\n  getFieldErrors,\n  getCurrentStepNameFromState,\n  getStepsOrdered,\n  getStepPosition,\n  getFormValues,\n  getEnabledSteps,\n} from '../helpers';\n\n/*\n  Form Actions\n*/\n\nexport const formValidate = () => (state) => {\n  const fields = (state.fields || [])\n    .map(x => ({\n      ...x,\n      errors: getFieldErrors(x.name, state.fields),\n    }));\n\n  const isValid = fields.filter(x => x.isEnabled).every(x => !x.errors.length);\n  const steps = (state.steps || []).map(s => ({\n    ...s,\n    isValid: getEnabledFieldsByStep(s.name, fields).every(x => !x.errors.length),\n  }));\n\n  return {\n    ...state,\n    fields,\n    steps,\n    isValid,\n  };\n};\n\nexport const formInvalidateFields = fieldsErrors => (state) => {\n  const fields = state.fields.map((field) => {\n    const errorMessage = fieldsErrors[field.name];\n\n    if (!errorMessage) {\n      return field;\n    }\n\n    return {\n      ...field,\n      externalError: errorMessage,\n    };\n  });\n\n  let newState = {\n    ...state,\n    fields,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const formSubmit = (\n  callback = () => {},\n  callbackOnValid = () => {},\n  callbackOnInvalid = () => {},\n) => (state) => {\n  const steps = (state.steps || []).map(step => ({\n    ...step,\n    isSubmitted: true,\n  }));\n\n  const formValues = getFormValues(state.fields);\n\n  callback(formValues);\n\n  let newState = {\n    ...state,\n    steps,\n    isSubmitted: true,\n  };\n\n  newState = formValidate()(newState);\n\n  if (newState.isValid) {\n    callbackOnValid(formValues);\n  } else {\n    callbackOnInvalid(formValues);\n  }\n\n  return newState;\n};\n\nexport const formReset = () => (state) => {\n  const fields = (state.fields || []).map(({ externalError, ...field }) => ({\n    ...field,\n    isPristine: true,\n    value: field.defaultValue,\n  }));\n\n  const steps = (state.steps || []).map(step => ({\n    ...step,\n    isSubmitted: false,\n    isVisited: false,\n  }));\n\n  let newState = {\n    ...state,\n    fields,\n    steps,\n    isSubmitted: false,\n    navigatedStepName: state.initialStepName,\n    resetKey: state.resetKey + 1,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\n/*\n  Step Actions\n*/\n\nexport const stepRegister = (name, { order = 0, label = '', isEnabled = true } = {}) => (state) => {\n  const step = state.steps.find(x => x.name === name) || {};\n  const otherSteps = state.steps.filter(x => x.name !== name);\n  const steps = getStepsOrdered([\n    ...otherSteps,\n    {\n      ...step,\n      name,\n      label,\n      order,\n      isValid: true,\n      isVisited: false,\n      isSubmitted: false,\n      isEnabled,\n    },\n  ]);\n\n  let newState = {\n    ...state,\n    steps,\n    initialStepName: steps.length ? steps[0].name : null,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const stepUnregister = name => (state) => {\n  const otherSteps = state.steps.filter(x => x.name !== name);\n  const steps = getStepsOrdered(otherSteps);\n\n  let newState = {\n    ...state,\n    steps,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const stepUpdate = (name, { label, isEnabled } = {}) => (state) => {\n  const step = state.steps.find(x => x.name === name) || {};\n  const otherSteps = state.steps.filter(x => x.name !== name);\n  const steps = getStepsOrdered([\n    ...otherSteps,\n    {\n      ...step,\n      label,\n      isEnabled,\n    },\n  ]);\n\n  return {\n    ...state,\n    steps,\n  };\n};\n\nexport const stepSetVisited = name => (state) => {\n  const step = state.steps.find(x => x.name === name) || {};\n  const otherSteps = state.steps.filter(x => x.name !== name);\n  const steps = getStepsOrdered([\n    ...otherSteps,\n    {\n      ...step,\n      isVisited: true,\n    },\n  ]);\n\n  return {\n    ...state,\n    steps,\n  };\n};\n\nexport const stepGoTo = name => (state) => {\n  const { steps } = state;\n\n  const newStep = getEnabledSteps(steps).find(x => x.name === name);\n\n  if (!newStep || !newStep.name) {\n    return state;\n  }\n\n  let newState = {\n    ...state,\n    navigatedStepName: newStep.name,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const stepGoToPosition = position => (state) => {\n  const { steps } = state;\n\n  const newStep = getEnabledSteps(steps)[position] || {};\n\n  return stepGoTo(newStep.name)(state);\n};\n\nexport const stepGoNext = () => (state) => {\n  const { steps } = state;\n\n  const stepsCount = getEnabledSteps(steps).length;\n  const currenStepName = getCurrentStepNameFromState(state);\n  const currentStepPosition = getStepPosition(currenStepName, steps);\n  let nextStepPosition = stepsCount > 0 ? currentStepPosition + 1 : 0;\n  nextStepPosition = nextStepPosition > stepsCount - 1 ? currentStepPosition : nextStepPosition;\n\n  return stepGoToPosition(nextStepPosition)(state);\n};\n\nexport const stepGoPrev = () => (state) => {\n  const { steps } = state;\n\n  const currenStepName = getCurrentStepNameFromState(state);\n  const currentStepPosition = getStepPosition(currenStepName, steps);\n\n  let prevStepPosition = currentStepPosition - 1;\n  prevStepPosition = prevStepPosition < 0 ? 0 : prevStepPosition;\n\n  return stepGoToPosition(prevStepPosition)(state);\n};\n\nexport const stepSubmit = (\n  name,\n  callback = () => {},\n  callbackOnValid = () => {},\n  callbackOnInvalid = () => {},\n) => (state) => {\n  const step = state.steps.find(x => x.name === name) || {};\n  const otherSteps = state.steps.filter(x => x.name !== name);\n  const steps = getStepsOrdered([\n    ...otherSteps,\n    {\n      ...step,\n      isSubmitted: true,\n    },\n  ]);\n\n  let newState = {\n    ...state,\n    steps,\n  };\n\n  if (!step.isValid) {\n    return newState;\n  }\n\n  const { navigatedStepName: prevStepName } = newState;\n\n  newState = stepGoNext()(newState);\n\n  if (prevStepName === newState.navigatedStepName) {\n    newState = formSubmit(callback, callbackOnValid, callbackOnInvalid)(newState);\n  }\n\n  return newState;\n};\n\n/*\n  Field Actions\n*/\n\nexport const fieldRegister = (\n  id,\n  name,\n  {\n    value = null,\n    step = null,\n    validations = [],\n  } = {},\n) => (state) => {\n  const field = state.fields.find(x => x.name === name) || {};\n  const otherFields = state.fields.filter(x => x.name !== name);\n  const fields = [\n    ...otherFields,\n    {\n      ...field,\n      id,\n      name,\n      value: field.value || value,\n      defaultValue: value,\n      isEnabled: true,\n      isPristine: true,\n      step,\n      validations,\n      errors: [],\n    },\n  ];\n\n  let newState = {\n    ...state,\n    fields,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const fieldUnregister = (id, isKeepValue) => (state) => {\n  const field = state.fields.find(x => x.id === id);\n\n  if (!field) {\n    return state;\n  }\n\n  const otherFields = state.fields.filter(x => x.id !== id);\n\n  const fields = !isKeepValue ? otherFields : [\n    ...otherFields,\n    {\n      ...field,\n      isEnabled: false,\n    },\n  ];\n\n  let newState = {\n    ...state,\n    fields,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const fieldUpdateValidations = (\n  id,\n  validations,\n) => (state) => {\n  const field = state.fields.find(x => x.id === id);\n\n  if (!field) {\n    return state;\n  }\n\n  const otherFields = state.fields.filter(x => x.id !== id);\n  const fields = [\n    ...otherFields,\n    {\n      ...field,\n      validations,\n    },\n  ];\n\n  let newState = {\n    ...state,\n    fields,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n\nexport const fieldSetValue = (id, value) => (state) => {\n  const field = state.fields.find(x => x.id === id);\n\n  if (!field) {\n    return state;\n  }\n\n  const otherFields = state.fields.filter(x => x.id !== id);\n  const { externalError, ...fieldWithoutExternalError } = field;\n\n  const fields = [\n    ...otherFields,\n    {\n      ...fieldWithoutExternalError,\n      value,\n      isPristine: false,\n    },\n  ];\n\n  let newState = {\n    ...state,\n    fields,\n  };\n\n  newState = formValidate()(newState);\n\n  return newState;\n};\n","import {\n  formInvalidateFields, stepGoNext, stepGoPrev, stepGoTo, formReset, formSubmit, stepSubmit,\n} from '../FormContext/actions';\nimport {\n  getFormValues,\n  getCurrentStepNameFromState,\n  getStep,\n  getStepPosition,\n  getFieldStepName,\n  getEnabledSteps,\n} from '../FormContext/helpers';\nimport { useFormContext } from '../FormContext';\n\nexport const initialFormState = {\n  id: null,\n  submit: () => {},\n  isValid: true,\n  isSubmitted: false,\n  values: {},\n  invalidateFields: () => {},\n  reset: () => {},\n  resetKey: 0,\n  currentStep: {},\n  steps: [],\n  isStepValid: true,\n  isStepSubmitted: false,\n  isFirstStep: true,\n  isLastStep: true,\n  submitStep: () => {},\n  getFieldStepName: () => {},\n  nextStep: () => {},\n  prevStep: () => {},\n  goToStep: () => {},\n};\n\nexport const useFormState = () => {\n  const formContext = useFormContext();\n\n  if (!formContext) {\n    return null;\n  }\n\n  const {\n    state, dispatch, onSubmit, onValidSubmit, onInvalidSubmit,\n  } = formContext;\n\n  const {\n    id,\n    fields,\n    isValid: isFormValid,\n    isSubmitted: isFormSubmitted,\n    steps,\n    resetKey,\n  } = state;\n\n  const values = getFormValues(fields);\n\n  const getStepProperties = ({\n    name,\n    label,\n    isValid,\n    isVisited,\n    isSubmitted,\n    index,\n  }) => ({\n    name,\n    label,\n    isValid,\n    isVisited,\n    isSubmitted,\n    index,\n  });\n\n  const enabledSteps = getEnabledSteps(steps);\n  const stepsCount = enabledSteps.length;\n\n  const currentStepName = getCurrentStepNameFromState(state);\n  const currentStep = getStep(currentStepName, enabledSteps);\n  const currentStepPosition = getStepPosition(currentStepName, enabledSteps);\n\n  const handleSubmit = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    dispatch(formSubmit(onSubmit, onValidSubmit, onInvalidSubmit));\n  };\n\n  const handleStepSubmit = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    dispatch(stepSubmit(currentStepName, onSubmit, onValidSubmit, onInvalidSubmit));\n  };\n\n  return {\n    id,\n    submit: handleSubmit,\n    isValid: isFormValid,\n    isSubmitted: isFormSubmitted,\n    values,\n    invalidateFields: (fieldsErrors) => { dispatch(formInvalidateFields(fieldsErrors)); },\n    reset: () => { dispatch(formReset()); },\n    resetKey,\n    currentStep: getStepProperties(currentStep),\n    steps: enabledSteps.map(getStepProperties),\n    isStepValid: currentStep.isValid,\n    isStepSubmitted: currentStep.isSubmitted,\n    isFirstStep: currentStepPosition === 0,\n    isLastStep: currentStepPosition === stepsCount - 1,\n    submitStep: handleStepSubmit,\n    getFieldStepName: fieldName => getFieldStepName(fieldName, fields),\n    nextStep: () => { dispatch(stepGoNext()); },\n    prevStep: () => { dispatch(stepGoPrev()); },\n    goToStep: (name) => { dispatch(stepGoTo(name)); },\n  };\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormContext } from '../FormContext';\nimport { useFormState } from '../useFormState';\n\nexport const propTypes = {\n  children: PropTypes.node,\n  autoForm: PropTypes.bool,\n  onValid: PropTypes.func,\n  onInvalid: PropTypes.func,\n  onChange: PropTypes.func,\n  connect: PropTypes.shape({\n    __connect__: PropTypes.func,\n  }),\n};\n\nexport const defaultProps = {\n  children: '',\n  autoForm: false,\n  onValid: () => {},\n  onInvalid: () => {},\n  onChange: () => {},\n  connect: {\n    __connect__: () => {},\n  },\n};\n\nexport const Form = ({\n  children,\n  autoForm,\n  onValid,\n  onInvalid,\n  onChange,\n  connect,\n}) => {\n  const { dispatch } = useFormContext();\n\n  const exposedState = useFormState();\n\n  onChange(exposedState.values);\n\n  if (exposedState.isValid) {\n    onValid();\n  } else {\n    onInvalid();\n  }\n\n  useEffect(() => {\n    connect.__connect__(exposedState);\n  }, [\n    dispatch,\n    JSON.stringify(connect.__connect__),\n    JSON.stringify(exposedState),\n  ]);\n\n  if (!autoForm) {\n    return children;\n  }\n\n  return (\n    <form noValidate onSubmit={exposedState.submit}>\n      { children }\n    </form>\n  );\n};\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n","export const ErrorStepWithoutName = new Error('A <FormizStep> always needs a `name` attribute.');\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormContext } from '../FormContext';\nimport {\n  stepRegister, stepUnregister, stepSetVisited, stepUpdate, stepGoPrev,\n} from '../FormContext/actions';\nimport { ErrorStepWithoutName } from './errors';\nimport { useFormState } from '../useFormState';\n\nexport const propTypes = {\n  as: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n    PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n    ])),\n  ]),\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  isEnabled: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.node,\n  order: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nexport const defaultProps = {\n  as: 'div',\n  children: '',\n  isEnabled: true,\n  label: '',\n  order: 0,\n  style: {},\n};\n\nexport const FormStep = ({\n  as: Tag,\n  children,\n  isEnabled,\n  name,\n  label,\n  order,\n  style,\n  ...props\n}) => {\n  if (!name) {\n    throw ErrorStepWithoutName;\n  }\n\n  const { dispatch } = useFormContext();\n  const { currentStep } = useFormState();\n\n  const isActive = currentStep.name === name;\n\n  useEffect(() => {\n    if (currentStep.name && !currentStep.isVisited && isActive) {\n      dispatch(stepSetVisited(currentStep.name));\n    }\n  });\n\n  useEffect(() => {\n    if (isActive && !isEnabled) {\n      dispatch(stepGoPrev());\n    }\n  }, [isEnabled, isActive]);\n\n  useEffect(() => {\n    dispatch(stepRegister(name, { order }));\n\n    return () => {\n      dispatch(stepUnregister(name));\n    };\n  }, [name, order]);\n\n  useEffect(() => {\n    dispatch(stepUpdate(name, { label, isEnabled: !!isEnabled }));\n  }, [isEnabled, label]);\n\n  if (typeof children === 'function') {\n    return children({\n      isActive,\n    });\n  }\n\n  return (\n    <Tag\n      style={{\n        ...style,\n        display: !isActive ? 'none' : null,\n      }}\n      {...props}\n    >\n      {isEnabled && children}\n    </Tag>\n  );\n};\n\n\nFormStep.propTypes = propTypes;\nFormStep.defaultProps = defaultProps;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FormStepContext = React.createContext();\n\nexport const useFormStepName = () => useContext(FormStepContext);\n\nexport const FormStepContextProvider = ({ children, name }) => (\n  <FormStepContext.Provider value={name}>\n    {children}\n  </FormStepContext.Provider>\n);\n\nFormStepContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  name: PropTypes.string,\n};\n\nFormStepContextProvider.defaultProps = {\n  name: null,\n};\n","import { useState } from 'react';\nimport { initialFormState, useFormState } from '../useFormState';\n\nexport const useForm = () => {\n  const [state, setState] = useState(initialFormState);\n  const formState = useFormState();\n\n  // Use form context to retrieve the state\n  if (formState) {\n    return formState;\n  }\n\n  // Use the connect property to retrieve the state\n  const connect = (val) => {\n    setState(val);\n  };\n\n  return { ...state, __connect__: connect };\n};\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","export const ErrorFieldWithoutForm = new Error('A Formiz field always needs to be in a `<Formiz>` component.');\nexport const ErrorFieldWithoutName = new Error('A Formiz field always needs a `name` attribute.');\n","import {\n  useEffect, useState, useRef, useMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport memoized from 'fast-memoize';\nimport { useFormContext } from '../FormContext';\nimport { getStep, getUniqueId } from '../FormContext/helpers';\nimport {\n  fieldRegister, fieldUnregister, fieldUpdateValidations, fieldSetValue,\n} from '../FormContext/actions';\nimport { useFormStepName } from '../FormStepContext';\nimport { ErrorFieldWithoutForm, ErrorFieldWithoutName } from './errors';\n\nconst DEFAULT_FIELD_DEBOUNCE = 100;\n\nexport const fieldPropTypes = {\n  debounce: PropTypes.number,\n  defaultValue: PropTypes.any,\n  formatValue: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  keepValue: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  validations: PropTypes.arrayOf(PropTypes.shape({\n    rule: PropTypes.func,\n    message: PropTypes.node,\n  })),\n};\n\nexport const fieldDefaultProps = {\n  debounce: DEFAULT_FIELD_DEBOUNCE,\n  defaultValue: null,\n  formatValue: val => val,\n  required: false,\n  keepValue: false,\n  onChange: () => {},\n  validations: [],\n};\n\nconst getIsRequiredValidation = (required) => {\n  if (!required && required !== '') {\n    return {};\n  }\n  return {\n    rule: x => !!x || x === 0,\n    message: required !== true ? required : '',\n  };\n};\n\nconst getValidations = (required, validations) => {\n  const extraRules = [\n    getIsRequiredValidation(required),\n  ];\n\n  return [\n    ...extraRules,\n    ...validations,\n  ]\n    .filter(x => x.rule)\n    .map(x => ({ ...x, rule: memoized(x.rule) }));\n};\n\nexport const useField = ({\n  debounce = DEFAULT_FIELD_DEBOUNCE,\n  defaultValue,\n  formatValue = val => val,\n  required,\n  keepValue,\n  name,\n  onChange,\n  validations = [],\n}) => {\n  const fieldId = useMemo(() => getUniqueId('field'), []);\n\n  if (!name) {\n    throw ErrorFieldWithoutName;\n  }\n\n  const formContext = useFormContext();\n  const stepName = useFormStepName();\n\n  if (!formContext) {\n    throw ErrorFieldWithoutForm;\n  }\n\n  const { state, dispatch } = formContext;\n  const field = state.fields.find(f => f.name === name) || {};\n  const errorMessages = (field.errors || []).filter(x => !!x);\n  const currentStep = getStep(stepName, state.steps);\n  const isSubmitted = currentStep.name ? currentStep.isSubmitted : state.isSubmitted;\n  const [localValue, setLocalValue] = useState(field.value || defaultValue);\n\n  const debounceRef = useRef(debounce);\n  debounceRef.current = debounce;\n\n  const defaultValueRef = useRef();\n  defaultValueRef.current = defaultValue;\n\n  const localValueRef = useRef();\n  localValueRef.current = localValue;\n\n  const keepValueRef = useRef();\n  keepValueRef.current = keepValue;\n\n  const formatValueRef = useRef();\n  formatValueRef.current = formatValue;\n\n  const isFirstRenderRef = useRef(true);\n\n  // Mount & Unmount field\n  useEffect(() => {\n    dispatch(fieldRegister(\n      fieldId,\n      name,\n      {\n        value: localValueRef.current || defaultValueRef.current,\n        step: stepName,\n        validations: getValidations(required, validations),\n      },\n    ));\n\n    return () => {\n      dispatch(fieldUnregister(fieldId, keepValueRef.current));\n    };\n  }, [\n    fieldId,\n    name,\n    stepName,\n  ]);\n\n  // Reset value if resetKey change\n  useEffect(() => {\n    if (!keepValueRef.current) {\n      setLocalValue(defaultValueRef.current);\n    }\n  }, [state.resetKey]);\n\n  // Update state value from local value\n  useEffect(() => {\n    if (isFirstRenderRef.current) {\n      return () => {};\n    }\n\n    const formattedValue = formatValueRef.current(localValue);\n\n    if (!debounceRef.current) {\n      dispatch(fieldSetValue(fieldId, formattedValue));\n      return () => {};\n    }\n\n    const timer = setTimeout(() => {\n      dispatch(fieldSetValue(fieldId, formattedValue));\n    }, debounceRef.current);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [JSON.stringify(localValue), fieldId]);\n\n  // Update Validations\n  useEffect(() => {\n    if (!isFirstRenderRef.current) {\n      dispatch(fieldUpdateValidations(fieldId, getValidations(required, validations)));\n    }\n  }, [\n    fieldId,\n    required,\n    ...validations.reduce(\n      // use deps array and message as dependencies for updating validations\n      (acc, cur) => [...acc, ...(cur.deps || []), cur.message],\n      [],\n    ),\n  ]);\n\n  useEffect(() => {\n    isFirstRenderRef.current = false;\n  }, []);\n\n  return {\n    id: fieldId,\n    resetKey: state.resetKey,\n    value: localValue || '',\n    valueDebounced: field.value || defaultValue || '',\n    errorMessages,\n    errorMessage: errorMessages[0],\n    isValid: field.errors ? !field.errors.length : true,\n    isPristine: !!field.isPristine,\n    isSubmitted,\n    setValue: (value) => {\n      setLocalValue(value);\n      if (onChange) {\n        onChange(formatValueRef.current(value));\n      }\n    },\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  propTypes as propTypesForm,\n  defaultProps as defaultPropsForm,\n} from './Form';\nimport { FormContextProvider } from './FormContext';\n\nimport {\n  FormStep,\n  propTypes as propTypesFormStep,\n  defaultProps as defaultPropsFormStep,\n} from './FormStep';\nimport { FormStepContextProvider } from './FormStepContext';\n\nexport { useForm } from './useForm';\nexport { useField, fieldPropTypes, fieldDefaultProps } from './useField';\n\nexport const Formiz = props => (\n  <FormContextProvider {...props}>\n    <Form {...props} />\n  </FormContextProvider>\n);\n\nFormiz.propTypes = {\n  ...propTypesForm,\n  onSubmit: PropTypes.func,\n  onValidSubmit: PropTypes.func,\n  onInvalidSubmit: PropTypes.func,\n};\n\nFormiz.defaultProps = {\n  ...defaultPropsForm,\n  onSubmit: () => {},\n  onValidSubmit: () => {},\n  onInvalidSubmit: () => {},\n};\n\nexport const FormizStep = ({ name, order, ...props }) => (\n  <FormStepContextProvider name={name}>\n    <FormStep {...props} name={name} order={order} />\n  </FormStepContextProvider>\n);\n\nFormizStep.propTypes = propTypesFormStep;\nFormizStep.defaultProps = defaultPropsFormStep;\n"],"names":["getInitialState","id","resetKey","isValid","isSubmitted","initialStepName","navigatedStepName","steps","fields","isObject","x","_typeof","constructor","Object","parseValues","values","keys","reduce","acc","key","parseValuesName","name","indexOf","value","nextValues","split","current","otherNames","match","currentName","currentIndex","currentCollection","length","group","join","getFormValues","filter","field","isEnabled","obj","getField","fieldName","find","getEnabledFieldsByStep","stepName","step","getFieldErrors","errorMessages","validations","map","rule","message","externalError","getEnabledSteps","getStepsOrdered","sort","a","b","index","order","getCurrentStepNameFromState","state","getStepPosition","findIndex","getStep","enabledSteps","getFieldStepName","getUniqueId","Math","random","toString","substr","FormContext","React","createContext","useFormContext","useContext","FormContextProvider","children","onStateChange","onSubmit","onValidSubmit","onInvalidSubmit","formId","useMemo","useState","setState","dispatch","useCallback","action","s","useEffect","Provider","propTypes","PropTypes","node","isRequired","func","defaultProps","formValidate","errors","every","formInvalidateFields","fieldsErrors","errorMessage","newState","formSubmit","callback","callbackOnValid","callbackOnInvalid","formValues","formReset","isPristine","defaultValue","isVisited","stepRegister","label","otherSteps","stepUnregister","stepUpdate","stepSetVisited","stepGoTo","newStep","stepGoToPosition","position","stepGoNext","stepsCount","currenStepName","currentStepPosition","nextStepPosition","stepGoPrev","prevStepPosition","stepSubmit","fieldRegister","otherFields","fieldUnregister","isKeepValue","fieldUpdateValidations","fieldSetValue","fieldWithoutExternalError","initialFormState","submit","invalidateFields","reset","currentStep","isStepValid","isStepSubmitted","isFirstStep","isLastStep","submitStep","nextStep","prevStep","goToStep","useFormState","formContext","isFormValid","isFormSubmitted","getStepProperties","currentStepName","e","preventDefault","autoForm","bool","onValid","onInvalid","onChange","connect","shape","__connect__","Form","exposedState","JSON","stringify","noValidate","ErrorStepWithoutName","Error","as","oneOfType","string","$$typeof","symbol","render","arrayOf","number","style","object","array","FormStep","Tag","props","isActive","display","FormStepContext","useFormStepName","FormStepContextProvider","useForm","formState","val","memoize","fn","options","cache","cacheDefault","serializer","serializerDefault","strategy","strategyDefault","isPrimitive","monadic","arg","cacheKey","computedValue","get","call","this","set","variadic","args","Array","prototype","slice","arguments","apply","assemble","context","serialize","bind","create","strategyVariadic","strategyMonadic","ObjectWithoutPrototypeCache","has","ErrorFieldWithoutForm","ErrorFieldWithoutName","DEFAULT_FIELD_DEBOUNCE","fieldPropTypes","debounce","any","formatValue","required","keepValue","fieldDefaultProps","getIsRequiredValidation","getValidations","extraRules","memoized","useField","fieldId","f","localValue","setLocalValue","debounceRef","useRef","defaultValueRef","localValueRef","keepValueRef","formatValueRef","isFirstRenderRef","formattedValue","timer","setTimeout","clearTimeout","cur","deps","valueDebounced","setValue","Formiz","propTypesForm","defaultPropsForm","FormizStep","propTypesFormStep","defaultPropsFormStep"],"mappings":"m4GAAO,IAAMA,gBAAkB,SAAAC,SAAO,CACpCA,GAAAA,EACAC,SAAU,EACVC,SAAS,EACTC,aAAa,EACbC,gBAAiB,KACjBC,kBAAmB,KACnBC,MAAO,GAaPC,OAAQ,KCpBJC,SAAW,SAAAC,UAAKA,GAAkB,WAAbC,QAAOD,IAAkBA,EAAEE,cAAgBC,QAEhEC,YAAc,SAAAC,UAAUF,OAAOG,KAAKD,GACvCE,QACC,SAACC,EAAKC,UAAQC,gBAAgBD,EAAKD,KACnCH,IAIEK,gBAAkB,SAACC,EAAMN,MACzBM,EAAKC,QAAQ,KAAO,GAAKD,EAAKC,QAAQ,KAAO,SACxCP,MAGHQ,EAAQR,EAAOM,KACyBN,GAAU,GAAzBS,KAAtBH,+BAAAA,oCACwBA,EAAKI,MAAM,MAArCC,OAAYC,gBACGD,EAAQE,MAAM,kBAEjB,sBACoBF,EAAQD,MAAM,eAA5CI,OAAcC,OACfC,EAAoBhB,EAAOc,IAAgB,MAE7CF,EAAWK,OAAQ,KACfC,oBACAlB,EAAOc,IAAgBpB,SAASM,EAAOc,GAAaC,IACpDf,EAAOc,GAAaC,GACpB,sBAEHH,EAAWO,KAAK,KAAOX,IAG1BQ,EAAkBD,GAAgBhB,YAAYmB,QAE9CF,EAAkBD,GAAgBP,2BAI/BC,qBACFK,EAAcE,QAIbE,oBACAxB,SAASM,EAAOW,IAAYX,EAAOW,GAAW,sBACjDC,EAAWO,KAAK,KAAOX,6BAIrBC,qBACFE,EAAUZ,YAAYmB,MAIdE,cAAgB,SAAC3B,OACtBO,GAAUP,GAAU,IACvB4B,QAAO,SAAAC,UAASA,EAAMC,aACtBrB,QAAO,SAACsB,EAAKF,4BACTE,qBACFF,EAAMhB,KAAOgB,EAAMd,UAClB,WAECT,YAAYC,IAGRyB,SAAW,SAACC,EAAWjC,UAAYA,GAAU,IACvDkC,MAAK,SAAAhC,UAAKA,EAAEW,OAASoB,MAEXE,uBAAyB,SAACC,EAAUpC,UAAYA,GAAU,IACpE4B,QAAO,SAAA1B,UAAKA,EAAE4B,aACdF,QAAO,SAAA1B,UAAKA,EAAEmC,OAASD,MAEbE,eAAiB,SAACL,EAAWjC,OAClC6B,EAAQG,SAASC,EAAWjC,OAE7B6B,QACI,OAGHU,GAAiBV,EAAMW,aAAe,IACzCC,KAAI,SAAAvC,UAAMA,EAAEwC,OAASxC,EAAEwC,KAAKb,EAAMd,OAASb,EAAEyC,QAAU,0BACvDf,QAAO,SAAA1B,SAAW,yBAANA,YAEX2B,EAAMe,eACAf,EAAMe,yCAAkBL,IAG3BA,GAGIM,gBAAkB,SAAA9C,UAAUA,GAAS,IAC/C6B,QAAO,SAAA1B,UAAKA,EAAE4B,cAEJgB,gBAAkB,SAAA/C,UAAUA,GAAS,IAC/CgD,MAAK,SAACC,EAAGC,UAAMD,EAAEE,MAAQD,EAAEC,SAC3BH,MAAK,SAACC,EAAGC,UAAMD,EAAEG,MAAQF,EAAEE,SAC3BV,KAAI,SAACvC,EAAGgD,4BAAgBhD,GAAGgD,MAAAA,QAEjBE,4BAA8B,SAAAC,UACzCA,EAAMvD,mBACHuD,EAAMxD,iBAGEyD,gBAAkB,SAAClB,EAAUrC,UAAWA,GAAS,IAC3D6B,QAAO,SAAA1B,UAAKA,EAAE4B,aACdyB,WAAU,SAAArD,UAAKA,EAAEW,OAASuB,MAAa,GAE7BoB,QAAU,SAACpB,EAAUrC,OAC1B0D,EAAeZ,gBAAgB9C,UAC9B+C,gBAAgBW,GACpBvB,MAAK,SAAAhC,UAAKA,EAAEW,OAASuB,MAAa,IAG1BsB,iBAAmB,SAACzB,EAAWjC,OACpC6B,EAAQ7B,EAAOkC,MAAK,SAAAhC,UAAKA,EAAEW,OAASoB,QAErCJ,GAAUA,EAAMC,iBAIdD,EAAMQ,MAGFsB,YAAc,SAAAhD,0BAAiBA,iBAAUiD,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,KCpH9EC,YAAcC,eAAMC,gBAEpBC,eAAiB,kBAAMC,iBAAWJ,cAElCK,oBAAsB,gBACjCC,IAAAA,SACAC,IAAAA,cACAC,IAAAA,SACAC,IAAAA,cACAC,IAAAA,gBAEMC,EAASC,eAAQ,kBAAMjB,YAAY,UAAS,qBACxBkB,eAASrF,gBAAgBmF,OAA5CtB,OAAOyB,OAERC,EAAWC,mBAAY,SAACC,GAC5BH,GAAS,SAAAI,UAAKD,EAAOC,QACpB,WAEHC,iBAAU,WACRZ,EAAclB,KACb,CAACA,IAGFY,6BAACD,YAAYoB,UACXrE,MAAO,CACLsC,MAAAA,EACA0B,SAAAA,EACAP,SAAAA,EACAC,cAAAA,EACAC,gBAAAA,IAGDJ,IAKPD,oBAAoBgB,UAAY,CAC9Bf,SAAUgB,UAAUC,KAAKC,WACzBjB,cAAee,UAAUG,KACzBjB,SAAUc,UAAUG,KACpBhB,cAAea,UAAUG,KACzBf,gBAAiBY,UAAUG,MAG7BpB,oBAAoBqB,aAAe,CACjCnB,cAAe,aACfC,SAAU,aACVC,cAAe,aACfC,gBAAiB,cC1CZ,IAAMiB,aAAe,kBAAM,SAACtC,OAC3BrD,GAAUqD,EAAMrD,QAAU,IAC7ByC,KAAI,SAAAvC,4BACAA,GACH0F,OAAQtD,eAAepC,EAAEW,KAAMwC,EAAMrD,aAGnCL,EAAUK,EAAO4B,QAAO,SAAA1B,UAAKA,EAAE4B,aAAW+D,OAAM,SAAA3F,UAAMA,EAAE0F,OAAOpE,UAC/DzB,GAASsD,EAAMtD,OAAS,IAAI0C,KAAI,SAAAyC,4BACjCA,GACHvF,QAASwC,uBAAuB+C,EAAErE,KAAMb,GAAQ6F,OAAM,SAAA3F,UAAMA,EAAE0F,OAAOpE,wCAIlE6B,GACHrD,OAAAA,EACAD,MAAAA,EACAJ,QAAAA,MAISmG,qBAAuB,SAAAC,UAAgB,SAAC1C,OAC7CrD,EAASqD,EAAMrD,OAAOyC,KAAI,SAACZ,OACzBmE,EAAeD,EAAalE,EAAMhB,aAEnCmF,oBAKAnE,GACHe,cAAeoD,IALRnE,KASPoE,oBACC5C,GACHrD,OAAAA,WAGFiG,EAAWN,cAAAA,CAAeM,KAKfC,WAAa,eACxBC,yDAAW,aACXC,yDAAkB,aAClBC,yDAAoB,oBACjB,SAAChD,OACEtD,GAASsD,EAAMtD,OAAS,IAAI0C,KAAI,SAAAJ,4BACjCA,GACHzC,aAAa,OAGT0G,EAAa3E,cAAc0B,EAAMrD,QAEvCmG,EAASG,OAELL,oBACC5C,GACHtD,MAAAA,EACAH,aAAa,WAGfqG,EAAWN,cAAAA,CAAeM,IAEbtG,QACXyG,EAAgBE,GAEhBD,EAAkBC,GAGbL,IAGIM,UAAY,kBAAM,SAAClD,OACxBrD,GAAUqD,EAAMrD,QAAU,IAAIyC,KAAI,cAAGG,kBAAkBf,yEACxDA,GACH2E,YAAY,EACZzF,MAAOc,EAAM4E,kBAGT1G,GAASsD,EAAMtD,OAAS,IAAI0C,KAAI,SAAAJ,4BACjCA,GACHzC,aAAa,EACb8G,WAAW,OAGTT,oBACC5C,GACHrD,OAAAA,EACAD,MAAAA,EACAH,aAAa,EACbE,kBAAmBuD,EAAMxD,gBACzBH,SAAU2D,EAAM3D,SAAW,WAG7BuG,EAAWN,cAAAA,CAAeM,KASfU,aAAe,SAAC9F,gEAAoD,OAA5CsC,MAAAA,aAAQ,QAAGyD,MAAAA,aAAQ,SAAI9E,UAAAA,uBAA4B,SAACuB,OACjFhB,EAAOgB,EAAMtD,MAAMmC,MAAK,SAAAhC,UAAKA,EAAEW,OAASA,MAAS,GACjDgG,EAAaxD,EAAMtD,MAAM6B,QAAO,SAAA1B,UAAKA,EAAEW,OAASA,KAChDd,EAAQ+C,6CACT+D,sBAEExE,GACHxB,KAAAA,EACA+F,MAAAA,EACAzD,MAAAA,EACAxD,SAAS,EACT+G,WAAW,EACX9G,aAAa,EACbkC,UAAAA,OAIAmE,oBACC5C,GACHtD,MAAAA,EACAF,gBAAiBE,EAAMyB,OAASzB,EAAM,GAAGc,KAAO,cAGlDoF,EAAWN,cAAAA,CAAeM,KAKfa,eAAiB,SAAAjG,UAAQ,SAACwC,OAC/BwD,EAAaxD,EAAMtD,MAAM6B,QAAO,SAAA1B,UAAKA,EAAEW,OAASA,KAGlDoF,oBACC5C,GACHtD,MAJY+C,gBAAgB+D,YAO9BZ,EAAWN,cAAAA,CAAeM,KAKfc,WAAa,SAAClG,gEAA6B,GAArB+F,IAAAA,MAAO9E,IAAAA,iBAAqB,SAACuB,OACxDhB,EAAOgB,EAAMtD,MAAMmC,MAAK,SAAAhC,UAAKA,EAAEW,OAASA,MAAS,GACjDgG,EAAaxD,EAAMtD,MAAM6B,QAAO,SAAA1B,UAAKA,EAAEW,OAASA,KAChDd,EAAQ+C,6CACT+D,sBAEExE,GACHuE,MAAAA,EACA9E,UAAAA,gCAKCuB,GACHtD,MAAAA,MAISiH,eAAiB,SAAAnG,UAAQ,SAACwC,OAC/BhB,EAAOgB,EAAMtD,MAAMmC,MAAK,SAAAhC,UAAKA,EAAEW,OAASA,MAAS,GACjDgG,EAAaxD,EAAMtD,MAAM6B,QAAO,SAAA1B,UAAKA,EAAEW,OAASA,KAChDd,EAAQ+C,6CACT+D,sBAEExE,GACHqE,WAAW,gCAKVrD,GACHtD,MAAAA,MAISkH,SAAW,SAAApG,UAAQ,SAACwC,OACvBtD,EAAUsD,EAAVtD,MAEFmH,EAAUrE,gBAAgB9C,GAAOmC,MAAK,SAAAhC,UAAKA,EAAEW,OAASA,SAEvDqG,IAAYA,EAAQrG,YAChBwC,MAGL4C,oBACC5C,GACHvD,kBAAmBoH,EAAQrG,cAG7BoF,EAAWN,cAAAA,CAAeM,KAKfkB,iBAAmB,SAAAC,UAAY,SAAC/D,OACnCtD,EAAUsD,EAAVtD,MAEFmH,EAAUrE,gBAAgB9C,GAAOqH,IAAa,UAE7CH,SAASC,EAAQrG,KAAjBoG,CAAuB5D,KAGnBgE,WAAa,kBAAM,SAAChE,OACvBtD,EAAUsD,EAAVtD,MAEFuH,EAAazE,gBAAgB9C,GAAOyB,OACpC+F,EAAiBnE,4BAA4BC,GAC7CmE,EAAsBlE,gBAAgBiE,EAAgBxH,GACxD0H,EAAmBH,EAAa,EAAIE,EAAsB,EAAI,SAG3DL,iBAFPM,EAAmBA,EAAmBH,EAAa,EAAIE,EAAsBC,EAEtEN,CAAmC9D,KAG/BqE,WAAa,kBAAM,SAACrE,OACvBtD,EAAUsD,EAAVtD,MAEFwH,EAAiBnE,4BAA4BC,GAG/CsE,EAFwBrE,gBAAgBiE,EAAgBxH,GAEf,SAGtCoH,iBAFPQ,EAAmBA,EAAmB,EAAI,EAAIA,EAEvCR,CAAmC9D,KAG/BuE,WAAa,SACxB/G,OACAsF,yDAAW,aACXC,yDAAkB,aAClBC,yDAAoB,oBACjB,SAAChD,OACEhB,EAAOgB,EAAMtD,MAAMmC,MAAK,SAAAhC,UAAKA,EAAEW,OAASA,MAAS,GACjDgG,EAAaxD,EAAMtD,MAAM6B,QAAO,SAAA1B,UAAKA,EAAEW,OAASA,KAChDd,EAAQ+C,6CACT+D,sBAEExE,GACHzC,aAAa,OAIbqG,oBACC5C,GACHtD,MAAAA,WAGGsC,EAAK1C,SAIkCsG,EAApCnG,qBAERmG,EAAWoB,YAAAA,CAAapB,IAEMnG,oBAC5BmG,EAAWC,WAAWC,EAAUC,EAAiBC,EAAtCH,CAAyDD,IAG/DA,GAXEA,IAkBE4B,cAAgB,SAC3BpI,EACAoB,gEAKI,OAHFE,MAAAA,aAAQ,WACRsB,KAAAA,aAAO,WACPG,YAAAA,aAAc,YAEb,SAACa,OACExB,EAAQwB,EAAMrD,OAAOkC,MAAK,SAAAhC,UAAKA,EAAEW,OAASA,MAAS,GACnDiH,EAAczE,EAAMrD,OAAO4B,QAAO,SAAA1B,UAAKA,EAAEW,OAASA,KAClDb,+BACD8H,sBAEEjG,GACHpC,GAAAA,EACAoB,KAAAA,EACAE,MAAOc,EAAMd,OAASA,EACtB0F,aAAc1F,EACde,WAAW,EACX0E,YAAY,EACZnE,KAAAA,EACAG,YAAAA,EACAoD,OAAQ,OAIRK,oBACC5C,GACHrD,OAAAA,WAGFiG,EAAWN,cAAAA,CAAeM,KAKf8B,gBAAkB,SAACtI,EAAIuI,UAAgB,SAAC3E,OAC7CxB,EAAQwB,EAAMrD,OAAOkC,MAAK,SAAAhC,UAAKA,EAAET,KAAOA,SAEzCoC,SACIwB,MAGHyE,EAAczE,EAAMrD,OAAO4B,QAAO,SAAA1B,UAAKA,EAAET,KAAOA,KAEhDO,EAAUgI,+BACXF,sBAEEjG,GACHC,WAAW,MAJegG,EAQ1B7B,oBACC5C,GACHrD,OAAAA,WAGFiG,EAAWN,cAAAA,CAAeM,KAKfgC,uBAAyB,SACpCxI,EACA+C,UACG,SAACa,OACExB,EAAQwB,EAAMrD,OAAOkC,MAAK,SAAAhC,UAAKA,EAAET,KAAOA,SAEzCoC,SACIwB,MAGHyE,EAAczE,EAAMrD,OAAO4B,QAAO,SAAA1B,UAAKA,EAAET,KAAOA,KAChDO,+BACD8H,sBAEEjG,GACHW,YAAAA,MAIAyD,oBACC5C,GACHrD,OAAAA,WAGFiG,EAAWN,cAAAA,CAAeM,KAKfiC,cAAgB,SAACzI,EAAIsB,UAAU,SAACsC,OACrCxB,EAAQwB,EAAMrD,OAAOkC,MAAK,SAAAhC,UAAKA,EAAET,KAAOA,SAEzCoC,SACIwB,MAGHyE,EAAczE,EAAMrD,OAAO4B,QAAO,SAAA1B,UAAKA,EAAET,KAAOA,KAC5B0I,GAA8BtG,EAAhDe,uCAAgDf,sBAElD7B,+BACD8H,sBAEEK,GACHpH,MAAAA,EACAyF,YAAY,MAIZP,oBACC5C,GACHrD,OAAAA,WAGFiG,EAAWN,cAAAA,CAAeM,KCzYfmC,iBAAmB,CAC9B3I,GAAI,KACJ4I,OAAQ,aACR1I,SAAS,EACTC,aAAa,EACbW,OAAQ,GACR+H,iBAAkB,aAClBC,MAAO,aACP7I,SAAU,EACV8I,YAAa,GACbzI,MAAO,GACP0I,aAAa,EACbC,iBAAiB,EACjBC,aAAa,EACbC,YAAY,EACZC,WAAY,aACZnF,iBAAkB,aAClBoF,SAAU,aACVC,SAAU,aACVC,SAAU,cAGCC,aAAe,eACpBC,EAAc/E,qBAEf+E,SACI,SAIP7F,EACE6F,EADF7F,MAAO0B,EACLmE,EADKnE,SAAUP,EACf0E,EADe1E,SAAUC,EACzByE,EADyBzE,cAAeC,EACxCwE,EADwCxE,gBAI1CjF,EAME4D,EANF5D,GACAO,EAKEqD,EALFrD,OACSmJ,EAIP9F,EAJF1D,QACayJ,EAGX/F,EAHFzD,YACAG,EAEEsD,EAFFtD,MACAL,EACE2D,EADF3D,SAGIa,EAASoB,cAAc3B,GAEvBqJ,EAAoB,kBAOnB,CACLxI,OAPAA,KAQA+F,QAPAA,MAQAjH,UAPAA,QAQA+G,YAPAA,UAQA9G,cAPAA,YAQAsD,QAPAA,QAUIO,EAAeZ,gBAAgB9C,GAC/BuH,EAAa7D,EAAajC,OAE1B8H,EAAkBlG,4BAA4BC,GAC9CmF,EAAchF,QAAQ8F,EAAiB7F,GACvC+D,EAAsBlE,gBAAgBgG,EAAiB7F,SAkBtD,CACLhE,GAAAA,EACA4I,OAlBmB,SAACkB,GAChBA,GACFA,EAAEC,iBAGJzE,EAASmB,WAAW1B,EAAUC,EAAeC,KAc7C/E,QAASwJ,EACTvJ,YAAawJ,EACb7I,OAAAA,EACA+H,iBAAkB,SAACvC,GAAmBhB,EAASe,qBAAqBC,KACpEwC,MAAO,WAAQxD,EAASwB,cACxB7G,SAAAA,EACA8I,YAAaa,EAAkBb,GAC/BzI,MAAO0D,EAAahB,IAAI4G,GACxBZ,YAAaD,EAAY7I,QACzB+I,gBAAiBF,EAAY5I,YAC7B+I,YAAqC,IAAxBnB,EACboB,WAAYpB,IAAwBF,EAAa,EACjDuB,WAvBuB,SAACU,GACpBA,GACFA,EAAEC,iBAGJzE,EAAS6C,WAAW0B,EAAiB9E,EAAUC,EAAeC,KAmB9DhB,iBAAkB,SAAAzB,UAAayB,iBAAiBzB,EAAWjC,IAC3D8I,SAAU,WAAQ/D,EAASsC,eAC3B0B,SAAU,WAAQhE,EAAS2C,eAC3BsB,SAAU,SAACnI,GAAWkE,EAASkC,SAASpG,OC9G/BwE,UAAY,CACvBf,SAAUgB,UAAUC,KACpBkE,SAAUnE,UAAUoE,KACpBC,QAASrE,UAAUG,KACnBmE,UAAWtE,UAAUG,KACrBoE,SAAUvE,UAAUG,KACpBqE,QAASxE,UAAUyE,MAAM,CACvBC,YAAa1E,UAAUG,QAIdC,aAAe,CAC1BpB,SAAU,GACVmF,UAAU,EACVE,QAAS,aACTC,UAAW,aACXC,SAAU,aACVC,QAAS,CACPE,YAAa,eAIJC,KAAO,gBAClB3F,IAAAA,SACAmF,IAAAA,SACAE,IAAAA,QACAC,IAAAA,UACAC,IAAAA,SACAC,IAAAA,QAEQ/E,EAAaZ,iBAAbY,SAEFmF,EAAejB,sBAErBY,EAASK,EAAa3J,QAElB2J,EAAavK,QACfgK,IAEAC,IAGFzE,iBAAU,WACR2E,EAAQE,YAAYE,KACnB,CACDnF,EACAoF,KAAKC,UAAUN,EAAQE,aACvBG,KAAKC,UAAUF,KAGZT,EAKHxF,qCAAMoG,cAAW7F,SAAU0F,EAAa7B,QACpC/D,GALGA,GAUX2F,KAAK5E,UAAYA,UACjB4E,KAAKvE,aAAeA,aCnEb,IAAM4E,qBAAuB,IAAIC,MAAM,mDCSjClF,YAAY,CACvBmF,GAAIlF,UAAUmF,UAAU,CACtBnF,UAAUG,KACVH,UAAUoF,OACVpF,UAAUyE,MAAM,CAAEY,SAAUrF,UAAUsF,OAAQC,OAAQvF,UAAUG,OAChEH,UAAUwF,QAAQxF,UAAUmF,UAAU,CACpCnF,UAAUG,KACVH,UAAUoF,OACVpF,UAAUyE,MAAM,CAAEY,SAAUrF,UAAUsF,OAAQC,OAAQvF,UAAUG,YAGpEnB,SAAUgB,UAAUmF,UAAU,CAACnF,UAAUC,KAAMD,UAAUG,OACzD3D,UAAWwD,UAAUoE,KACrB7I,KAAMyE,UAAUoF,OAAOlF,WACvBoB,MAAOtB,UAAUC,KACjBpC,MAAOmC,UAAUyF,OACjBC,MAAO1F,UAAUmF,UAAU,CAACnF,UAAU2F,OAAQ3F,UAAU4F,SAG7CxF,eAAe,CAC1B8E,GAAI,MACJlG,SAAU,GACVxC,WAAW,EACX8E,MAAO,GACPzD,MAAO,EACP6H,MAAO,IAGIG,SAAW,gBAClBC,IAAJZ,GACAlG,IAAAA,SACAxC,IAAAA,UACAjB,IAAAA,KACA+F,IAAAA,MACAzD,IAAAA,MACA6H,IAAAA,MACGK,+FAEExK,QACGyJ,yBAGAvF,EAAaZ,iBAAbY,SACAyD,EAAgBS,eAAhBT,YAEF8C,EAAW9C,EAAY3H,OAASA,SAEtCsE,iBAAU,WACJqD,EAAY3H,OAAS2H,EAAY9B,WAAa4E,GAChDvG,EAASiC,eAAewB,EAAY3H,UAIxCsE,iBAAU,WACJmG,IAAaxJ,GACfiD,EAAS2C,gBAEV,CAAC5F,EAAWwJ,IAEfnG,iBAAU,kBACRJ,EAAS4B,aAAa9F,EAAM,CAAEsC,MAAAA,KAEvB,WACL4B,EAAS+B,eAAejG,OAEzB,CAACA,EAAMsC,IAEVgC,iBAAU,WACRJ,EAASgC,WAAWlG,EAAM,CAAE+F,MAAAA,EAAO9E,YAAaA,OAC/C,CAACA,EAAW8E,IAES,mBAAbtC,EACFA,EAAS,CACdgH,SAAAA,IAKFrH,6BAACmH,YACCJ,wBACKA,GACHO,QAAUD,EAAoB,KAAT,UAEnBD,GAEHvJ,GAAawC,IAMpB6G,SAAS9F,UAAYA,YACrB8F,SAASzF,aAAeA,eClGjB,IAAM8F,gBAAkBvH,eAAMC,gBAExBuH,gBAAkB,kBAAMrH,iBAAWoH,kBAEnCE,wBAA0B,gBAAGpH,IAAAA,SAAUzD,IAAAA,YAClDoD,6BAACuH,gBAAgBpG,UAASrE,MAAOF,GAC9ByD,IAILoH,wBAAwBrG,UAAY,CAClCf,SAAUgB,UAAUC,KAAKC,WACzB3E,KAAMyE,UAAUoF,QAGlBgB,wBAAwBhG,aAAe,CACrC7E,KAAM,UChBK8K,QAAU,gCACK9G,eAASuD,qBAA5B/E,OAAOyB,OACR8G,EAAY3C,kBAGd2C,SACKA,2BAQGvI,GAAO2G,YAJH,SAAC6B,GACf/G,EAAS+G,OCVb,SAASC,QAASC,EAAIC,OAChBC,EAAQD,GAAWA,EAAQC,MAC3BD,EAAQC,MACRC,aAEAC,EAAaH,GAAWA,EAAQG,WAChCH,EAAQG,WACRC,yBAEWJ,GAAWA,EAAQK,SAC9BL,EAAQK,SACRC,iBAEYP,EAAI,CAClBE,MAAOA,EACPE,WAAYA,IAQhB,SAASI,YAAaxL,UACJ,MAATA,GAAkC,iBAAVA,GAAuC,kBAAVA,EAG9D,SAASyL,QAAST,EAAIE,EAAOE,EAAYM,OACnCC,EAAWH,YAAYE,GAAOA,EAAMN,EAAWM,GAE/CE,EAAgBV,EAAMW,IAAIF,eACD,IAAlBC,IACTA,EAAgBZ,EAAGc,KAAKC,KAAML,GAC9BR,EAAMc,IAAIL,EAAUC,IAGfA,EAGT,SAASK,SAAUjB,EAAIE,EAAOE,OACxBc,EAAOC,MAAMC,UAAUC,MAAMP,KAAKQ,UAAW,GAC7CX,EAAWP,EAAWc,GAEtBN,EAAgBV,EAAMW,IAAIF,eACD,IAAlBC,IACTA,EAAgBZ,EAAGuB,MAAMR,KAAMG,GAC/BhB,EAAMc,IAAIL,EAAUC,IAGfA,EAGT,SAASY,SAAUxB,EAAIyB,EAASnB,EAAUJ,EAAOwB,UACxCpB,EAASqB,KACdF,EACAzB,EACAE,EACAwB,GAIJ,SAASnB,gBAAiBP,EAAIC,UAGrBuB,SACLxB,EACAe,KAJ2B,IAAdf,EAAGvK,OAAegL,QAAUQ,SAMzChB,EAAQC,MAAM0B,SACd3B,EAAQG,YAIZ,SAASyB,iBAAkB7B,EAAIC,UAGtBuB,SACLxB,EACAe,KAJaE,SAMbhB,EAAQC,MAAM0B,SACd3B,EAAQG,YAIZ,SAAS0B,gBAAiB9B,EAAIC,UAGrBuB,SACLxB,EACAe,KAJaN,QAMbR,EAAQC,MAAM0B,SACd3B,EAAQG,YAQZ,SAASC,2BACAjC,KAAKC,UAAUiD,WAOxB,SAASS,mCACF7B,MAAQ5L,OAAOsN,OAAO,MAG7BG,4BAA4BX,UAAUY,IAAM,SAAUpN,UAC5CA,KAAOmM,KAAKb,OAGtB6B,4BAA4BX,UAAUP,IAAM,SAAUjM,UAC7CmM,KAAKb,MAAMtL,IAGpBmN,4BAA4BX,UAAUJ,IAAM,SAAUpM,EAAKI,QACpDkL,MAAMtL,GAAOI,GAGpB,IAAImL,aAAe,CACjByB,OAAQ,kBACC,IAAIG,kCAQEhC,mBACW,CAC1BkB,SAAUY,iBACVpB,QAASqB,+CC9IEG,sBAAwB,IAAIzD,MAAM,gEAClC0D,sBAAwB,IAAI1D,MAAM,mDCYzC2D,uBAAyB,IAElBC,eAAiB,CAC5BC,SAAU9I,UAAUyF,OACpBtE,aAAcnB,UAAU+I,IACxBC,YAAahJ,UAAUG,KACvB8I,SAAUjJ,UAAUmF,UAAU,CAACnF,UAAUoE,KAAMpE,UAAUC,OACzDiJ,UAAWlJ,UAAUoE,KACrB7I,KAAMyE,UAAUoF,OAChBb,SAAUvE,UAAUG,KACpBjD,YAAa8C,UAAUwF,QAAQxF,UAAUyE,MAAM,CAC7CrH,KAAM4C,UAAUG,KAChB9C,QAAS2C,UAAUC,SAIVkJ,kBAAoB,CAC/BL,SAAUF,uBACVzH,aAAc,KACd6H,YAAa,SAAAzC,UAAOA,GACpB0C,UAAU,EACVC,WAAW,EACX3E,SAAU,aACVrH,YAAa,IAGTkM,wBAA0B,SAACH,UAC1BA,GAAyB,KAAbA,EAGV,CACL7L,KAAM,SAAAxC,WAAOA,GAAW,IAANA,GAClByC,SAAsB,IAAb4L,EAAoBA,EAAW,IAJjC,IAQLI,eAAiB,SAACJ,EAAU/L,OAC1BoM,EAAa,CACjBF,wBAAwBH,UAGnB,UACFK,qBACApM,IAEFZ,QAAO,SAAA1B,UAAKA,EAAEwC,QACdD,KAAI,SAAAvC,4BAAWA,GAAGwC,KAAMmM,IAAS3O,EAAEwC,YAG3BoM,SAAW,oBACtBV,SAAAA,aAAWF,yBACXzH,IAAAA,iBACA6H,YAAAA,aAAc,SAAAzC,UAAOA,KACrB0C,IAAAA,SACAC,IAAAA,UACA3N,IAAAA,KACAgJ,IAAAA,aACArH,YAAAA,aAAc,KAERuM,EAAUnK,eAAQ,kBAAMjB,YAAY,WAAU,QAE/C9C,QACGoN,0BAGF/E,EAAc/E,iBACd/B,EAAWqJ,sBAEZvC,QACG8E,0BAGA3K,EAAoB6F,EAApB7F,MAAO0B,EAAamE,EAAbnE,SACTlD,EAAQwB,EAAMrD,OAAOkC,MAAK,SAAA8M,UAAKA,EAAEnO,OAASA,MAAS,GACnD0B,GAAiBV,EAAM+D,QAAU,IAAIhE,QAAO,SAAA1B,WAAOA,KACnDsI,EAAchF,QAAQpB,EAAUiB,EAAMtD,OACtCH,EAAc4I,EAAY3H,KAAO2H,EAAY5I,YAAcyD,EAAMzD,6BACnCiF,eAAShD,EAAMd,OAAS0F,MAArDwI,OAAYC,OAEbC,EAAcC,aAAOhB,GAC3Be,EAAYjO,QAAUkN,MAEhBiB,EAAkBD,eACxBC,EAAgBnO,QAAUuF,MAEpB6I,EAAgBF,eACtBE,EAAcpO,QAAU+N,MAElBM,EAAeH,eACrBG,EAAarO,QAAUsN,MAEjBgB,EAAiBJ,eACvBI,EAAetO,QAAUoN,MAEnBmB,EAAmBL,cAAO,UAGhCjK,iBAAU,kBACRJ,EAAS8C,cACPkH,EACAlO,EACA,CACEE,MAAOuO,EAAcpO,SAAWmO,EAAgBnO,QAChDmB,KAAMD,EACNI,YAAamM,eAAeJ,EAAU/L,MAInC,WACLuC,EAASgD,gBAAgBgH,EAASQ,EAAarO,aAEhD,CACD6N,EACAlO,EACAuB,IAIF+C,iBAAU,WACHoK,EAAarO,SAChBgO,EAAcG,EAAgBnO,WAE/B,CAACmC,EAAM3D,WAGVyF,iBAAU,cACJsK,EAAiBvO,eACZ,iBAGHwO,EAAiBF,EAAetO,QAAQ+N,OAEzCE,EAAYjO,eACf6D,EAASmD,cAAc6G,EAASW,IACzB,iBAGHC,EAAQC,YAAW,WACvB7K,EAASmD,cAAc6G,EAASW,MAC/BP,EAAYjO,gBAER,WACL2O,aAAaF,MAEd,CAACxF,KAAKC,UAAU6E,GAAaF,IAGhC5J,iBAAU,WACHsK,EAAiBvO,SACpB6D,EAASkD,uBAAuB8G,EAASJ,eAAeJ,EAAU/L,QAGpEuM,EACAR,6BACG/L,EAAY/B,iBAEZC,EAAKoP,sCAAYpP,sBAASoP,EAAIC,MAAQ,KAAKD,EAAInN,YAChD,OAIJwC,iBAAU,WACRsK,EAAiBvO,SAAU,IAC1B,IAEI,CACLzB,GAAIsP,EACJrP,SAAU2D,EAAM3D,SAChBqB,MAAOkO,GAAc,GACrBe,eAAgBnO,EAAMd,OAAS0F,GAAgB,GAC/ClE,cAAAA,EACAyD,aAAczD,EAAc,GAC5B5C,SAASkC,EAAM+D,SAAU/D,EAAM+D,OAAOpE,OACtCgF,aAAc3E,EAAM2E,WACpB5G,YAAAA,EACAqQ,SAAU,SAAClP,GACTmO,EAAcnO,GACV8I,GACFA,EAAS2F,EAAetO,QAAQH,OC3K3BmP,OAAS,SAAA7E,UACpBpH,6BAACI,oBAAwBgH,EACvBpH,6BAACgG,KAASoB,KAId6E,OAAO7K,4BACF8K,WACH3L,SAAUc,UAAUG,KACpBhB,cAAea,UAAUG,KACzBf,gBAAiBY,UAAUG,OAG7ByK,OAAOxK,+BACF0K,cACH5L,SAAU,aACVC,cAAe,aACfC,gBAAiB,mBAGN2L,WAAa,gBAAGxP,IAAAA,KAAMsC,IAAAA,MAAUkI,sDAC3CpH,6BAACyH,yBAAwB7K,KAAMA,GAC7BoD,6BAACkH,qBAAaE,GAAOxK,KAAMA,EAAMsC,MAAOA,OAI5CkN,WAAWhL,UAAYiL,YACvBD,WAAW3K,aAAe6K"}